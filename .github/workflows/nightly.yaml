name: Nightly Development Build and Release
# Controls when the action will run.
on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"

concurrency:
  group: release-${{ github.ref_name }}
  cancel-in-progress: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-meson-releases:
    name: Linux & macOS Release Builds

    uses: ./.github/workflows/meson.yml
    with:
      upload_artefacts: true

  build-msbuild-releases:
    name: Windows Release Build

    uses: ./.github/workflows/msbuild.yml
    with:
      upload_artefacts: true

  release:
    name: Publish Release
    runs-on: ubuntu-latest

    needs: [build-msbuild-releases, build-meson-releases]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - run: mkdir release

      - name: Download build artefacts
        uses: actions/download-artifact@v3
        with:
          path: release

      - run: ls -R release

      - name: Compress Windows Release
        run: |
          zip -j CortexCommand.windows.zip \
            "release/Cortex Command.exe" \
            external/lib/win/{fmod,SDL2}.dll

      - name: Compress Linux Release
        run: |
          zip -j CortexCommand.linux.zip \
            "release/CortexCommand (Linux)/CortexCommand.AppImage" \
            external/lib/linux/x86_64/libfmod.so*

      - name: Compress OSX Release
        run: |
          zip -j CortexCommand.macos.zip \
            "release/CortexCommand (macOS)/CortexCommand" \
            external/lib/macos/libfmod.dylib

      - name: Package Data files
        run: |
          zip -r -u CortexCommand.windows.zip Data
          zip -r -u CortexCommand.linux.zip Data
          zip -r -u CortexCommand.macos.zip Data

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            CortexCommand.windows.zip
            CortexCommand.linux.zip
            CortexCommand.macos.zip
          tag_name: "nightly"
          name: "Nightly Development Build"
          prerelease: true
          fail_on_unmatched_files: true
